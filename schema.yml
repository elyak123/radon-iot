openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /checar-email/:
    post:
      operationId: checar_email_create
      description: 'Verifica que la dirección de email que se introduce no hay sido utilizada por otro usuario.'
      parameters:
      - name: email
        required: true
        in: query
        description: Email que se desea verificar.
        schema:
          type: email
      tags:
      - checar-email
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailUnico'
  /iot/disponibilidad-wisol/:
    post:
      operationId: disponibilidad_wisol_create
      description: 'Endpoint que permite la verificación del Wisol en base de datos antes de proceder con la instalación.'
      parameters:
      - name: wisol
        required: true
        in: query
        description: Wisol que se desea verificar.
        schema:
          type: string
      tags:
      - disponibilidad-wisol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WisolValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WisolValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WisolValidation'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: 'El wisol es válido y se puede continuar con la instalación.'
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '404':
          description: 'Es un wisol que no ha sido encontrado y por lo tanto la instalación no puede continuar.'
        '400':
          description: 'Wisol: Este campo es requerido. o El chip que corresponde al dispositivo no existe favor de llamar a soporte. o El chip Wisol ya tiene un dispositivo asignado'
  /iot/dispositivos/:
    get:
      operationId: dispositivos_list
      description: Lista los dispositivos que están registrados con el usuario en sesión.
      parameters:
      - name: page
        required: false
        in: query
        description: Página que se desea obtener.
        schema:
          type: integer
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: false
      tags:
      - dispositivos
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDispositivoList'
          description: 'Obtiene los dispositivos del usuario autenticado'
  /iot/dispositivos/{wisol__serie}/:
    get:
      operationId: dispositivos_retrieve
      description: Regresa un dispositivo concreto por medio del número de serie Wisol.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - dispositivos
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '404':
          description: Dispositivo no encontrado.
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispositivoGeo'
          description: 'Obtiene un dispositivo específico del usuario.'
    patch:
      operationId: dispositivos_update
      description: Edita el Dispositivo por el número de Serie del Wisol dado.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - dispositivos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DispositivoGeo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DispositivoGeo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DispositivoGeo'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
          description: ''
        '404':
          description: Dispositivo no encontrado.
        '401':
          description: Las credenciales de autenticación no se proveyeron.
    delete:
      operationId: dispositivos_destroy
      description: Elimina el dispositivo por el número de serie de Wisol dado.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - dispositivos
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: Dispositivo no encontrado.
        '401':
          description: Las credenciales de autenticación no se proveyeron.
  /iot/lecturas/:
    get:
      operationId: lecturas_list
      description: 'Listado de lecturas geneal o específica de cada dispositivo.'
      parameters:
      - name: dispositivo
        required: true
        in: query
        description: Serie del Wisol del dispositivo del que se desea obtener las lecturas.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - lecturas
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLecturaList'
          description: 'Lecturas del dispositivo seleccionado'
        '401':
          description: Las credenciales de autenticación no se proveyeron.
  /auth/login/:
    post:
      operationId: login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedLogin'
          description: '[Se proporcionaron credenciales incorrectas.]'
  /auth/logout/:
    post:
      operationId: logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - logout
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /password/change/:
    post:
      operationId: password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /rutas/pedido/:
    get:
      operationId: pedido_list
      description: 'Listado de pedidos del usuario autenticado.'
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - pedido
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPedidoSerialiserList'
          description: 'Listado de pedidos del usuario autenticado.'
        '401':
          description: Las credenciales de autenticación no se proveyeron.
    post:
      operationId: pedido_create
      description: 'Creación de un nuevo pedido para determinado dispositivo.'
      tags:
      - pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '404':
          description: No encontrado.
  /rutas/pedido/{id}/:
    get:
      operationId: pedido_retrieve
      description: 'Obtiene un pedido por ID de base de datos.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - pedido
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidosSerialiser'
          description: ''
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '404':
          description: No encontrado.
    patch:
      operationId: pedido_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '404':
          description: No encontrado.
    delete:
      operationId: pedido_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - pedido
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
        '401':
          description: Las credenciales de autenticación no se proveyeron.
        '404':
          description: No encontrado.
  auth/refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpirationRefreshJWT'
          description: ''
  /market/sucursales/{wisol}:
    get:
      operationId: sucursales_retrieve
      description: 'Obtiene las sucursales basado en la ubicación actual del dispositivo.'
      parameters:
      - in: path
        name: wisol
        schema:
          type: string
        description: 'Serie del wisol del dispositivo deseado.'
        required: true
      tags:
      - sucursales
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SucursalPrecio'
          description: 'Lista de sucursales y el precio actual que manejan.'
        '401':
          description: No hay sucursales para el dispositivo seleccionado.
  /users/user-dispositivo-registration/:
    post:
      operationId: user_dispositivo_registration_create
      description: |-
        Se llama desde API permite la creacion de Consumidores por medio de
        app y operador, el objetivo principal de este endpoint es el de la 
        creación de un nuevo consumidor desde la app.
      tags:
      - user-dispositivo-registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          description: ''
        '500':
          description: La información enviada no ha sido verificada correctamente desde el frontend.
  /users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /users/{username}/:
    get:
      operationId: users_retrieve
      description: Obtén el detalle del usuario por medio de su username.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    DispositivoGeo:
      type: object
      properties:
        geometry:
          type: object
          readOnly: true
          properties:
            coordinates:
              type: array
              example: [0.0, 0.0]
              description: "Coordenadas en formato Y, X."
            type:
              type: string
              example: 'Point'
        properties:
          type: object
          properties:
            pk:
              type: integer
              readOnly: true
            nombre:
              type: string
              maxLength: 45
            wisol:
              type: string
              readOnly: true
            capacidad:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            sucursal:
              allOf:
              - $ref: '#/components/schemas/Nested'
              readOnly: true
            municipio:
              type: string
              readOnly: true
            localidad:
              type: string
              readOnly: true
            usuario:
              type: string
              readOnly: true
            calendarizado:
              type: boolean
            ultima_lectura:
              type: object
              additionalProperties: {}
              readOnly: true
            required:
            - localidad
            - municipio
            - pk
            - sucursal
            - ultima_lectura
            - usuario
            - wisol
        type:
          type: string
          example: 'Feature'
    Dispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        pk:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - localidad
      - municipio
      - pk
      - sucursal
      - ultima_lectura
      - usuario
      - wisol
    SucursalPrecio:
      type: object
      properties:
        gasera:
          type: string
          example: 'Gasera patito S.A. de C.V.'
          description: 'Nombre de la gasera'
        numeroPermiso:
          type: string
          format: email
          description: 'Número de permiso ante la CRE'
        precio:
          type: number
          example: 10.10
          description: 'Precio actual que maneja la gasera por litro de gas'
        precio_pk:
          type: integer
          example: 3
          description: 'ID en base de datos del precio'
        sucursal_pk:
          type: integer
          example: 10
          description: 'ID en base de datos de la sucursal'
        telefono:
          type: string
          example: '4491234657'
          description: 'Teléfono del usuario que ha hecho el pedido'
    ExpirationRefreshJWT:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    Lectura:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        fecha:
          type: string
          format: date-time
          readOnly: true
        sensor:
          type: integer
          readOnly: true
        porcentaje:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
          readOnly: true
        dispositivo:
          type: string
          format: uri
          readOnly: true
      required:
      - dispositivo
      - fecha
      - porcentaje
      - sensor
      - url
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    FailedLogin:
      type: object
      properties:
        non_field_errors:
          type: string
          example: "No puede iniciar sesión con las credenciales proporcionadas."
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 80
        numeroPermiso:
          type: string
          maxLength: 22
        ubicacion:
          type: object
          additionalProperties: {}
          nullable: true
        telefono:
          type: string
          maxLength: 128
        gasera:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - gasera
      - id
      - numeroPermiso
    NestedDispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        pk:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - localidad
      - municipio
      - pk
      - sucursal
      - ultima_lectura
      - usuario
      - wisol
    PaginatedDispositivoList:
      type: object
      properties:
        count:
          type: integer
          example: 1
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: object
          properties:
            features:
              type: array
              items:
                $ref: '#/components/schemas/DispositivoGeo'
            type:
              type: string
              example: 'FeatureCollection'
    EmailUnico:
      type: object
      properties:
        emailIsUnique:
          type: boolean
          example: True
    PaginatedLecturaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lectura'
    PaginatedPedidoSerialiserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/PedidosSerialiser'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        pk:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedLectura:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        fecha:
          type: string
          format: date-time
          readOnly: true
        sensor:
          type: integer
          readOnly: true
        porcentaje:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
          readOnly: true
        dispositivo:
          type: string
          format: uri
          readOnly: true
    PatchedPedidoSerialiser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        cantidad:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
        dispositivo:
          type: string
        precio:
          allOf:
          - $ref: '#/components/schemas/Precio'
          readOnly: true
        mensajes:
          type: array
          items:
            type: string
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        telefono:
          type: string
          maxLength: 128
        dispositivo_set:
          type: array
          items:
            $ref: '#/components/schemas/NestedDispositivo'
          readOnly: true
        tipo:
          $ref: '#/components/schemas/TipoEnum'
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
    PedidoSerialiser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        cantidad:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
          description: "Cantidad de gas en L"
        dispositivo:
          required: true
          type: string
          description: "Serie del wisol del dispositivo al cual se realizara el pedido."
        precio:
          required: true
          type: integer
          description: "PK del precio que el usuario ha seleccionado."
    PedidosSerialiser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          example: 1
          description: "ID de base de datos del pedido."
        cantidad:
          type: string
          format: decimal
          minimum: 0
          example: 95
          description: 'Cantidad en L que se pidió de gas.'
        dispositivo:
          type: string
          example: "4904902"
          description: "Serie del wisol asociado al dispositivo del cual se hizo el pedido de gas"
        precio:
          allOf:
          - $ref: '#/components/schemas/Precio'
          readOnly: true
        mensajes:
          type: array
          items:
            type: string
          description: "Array de mensajes que se han anexado al pedido."
      required:
      - cantidad
      - dispositivo
      - pk
      - precio
    Precio:
      type: object
      properties:
        precio:
          type: string
          format: decimal
          description: "Precio en MXN de la gasera."
          minimum: 0
        gasera:
          type: string
          readOnly: true
          description: "Gasera que va a surtir el pedido."
      required:
      - gasera
      - precio
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
          example: "Sesión cerrada con éxito."
      required:
      - detail
    TemporalPassUserDispsitivoCreation:
      type: object
      description: |-
        ENDPOINT:
        /users/user-dispositivo-registration/

        DESCRIPCION:
        Este endpoint es para crear el usuario con password inutilizable y el dispositivo del chip wisol
        que se esta instalando. El dispositivo deberá de comenzar a funcionar pero el usuario aún necesita
        activación.

        VALIDA:
        * Wisol con serie existe
        * Wisol disponible (sin dispositivo o Usuario)
        * Username sigue convenciones UTF-8
        * Username no existe previo a la creación
        * Email no existe previo a la creación

        ACCIONES:
        * Crea el usuario con pwd no utilizable
        * Crea el dispositivo con el chip Wisol proporcionado
        * Asigna el dispositivo al usuario recién creado
      properties:
        wisol:
          type: string
          description: Numero de serie del wisol a validar y unir al dispositivo
        email:
          type: string
          format: email
          description: Correo del futuro usuario
        username:
          type: string
          maxLength: 150
          minLength: 1
          description: Nombre de usuario del futuro usuario
        telefono:
          type: string
          description: 'telefono: Telefono del futuro usuario a 10 digitos'
        location:
          type: string
          description: Ubicacion geografica del futuro dispositivo en formato POINT(x.abcd -y.xyz)
          additionalProperties: {}
        capacidad:
          type: integer
          description: Capacidad del tanque del futuro dispositivo
        calle:
          type: string
          description: Nombre de la calle del dispositivo
        numero:
          type: string
          description: Numero e interior si existe
        cp:
          type: string
          description: Código postal
        colonia:
          type: string
          description: Colonia de la ubicación del dispositivo
      required:
      - calle
      - colonia
      - cp
      - location
      - numero
      - username
      - wisol
      - telefono
      - email
      - capacidad
    TipoEnum:
      enum:
      - CLIENTE
      - CONSUMIDOR
      - STAFF
      - OPERARIO
      type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        telefono:
          type: string
          maxLength: 128
        dispositivo_set:
          type: array
          items:
            $ref: '#/components/schemas/NestedDispositivo'
          readOnly: true
        tipo:
          $ref: '#/components/schemas/TipoEnum'
      required:
      - dispositivo_set
      - email
      - id
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    WisolValidation:
      type: object
      description: |-
        ENDPOINT:
        /iot/disponibilidad-wisol/
        POST
        wisol: <serie>

        VALIDA:
        * Wisol con serie existe
        * Wisol disponible (sin dispositivo o Usuario)
      properties:
        wisol:
          type: string
      required:
      - wisol
  securitySchemes:
    UserClassificationJWTCookieAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Autenticación que soporta JWT en el Authentication header, así
        como mediante cookie,
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
