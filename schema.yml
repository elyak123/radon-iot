openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpirationRefreshJWT'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpirationRefreshJWT'
          description: ''
  /auth/user/:
    get:
      operationId: auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /geo/localidades/dispositivos/:
    get:
      operationId: geo_localidades_dispositivos_list
      description: Regresa las localidades donde existen dispositivos.
      tags:
      - geo
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Localidad'
          description: ''
  /iot/devicetype/:
    get:
      operationId: iot_devicetype_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceTypeList'
          description: ''
    post:
      operationId: iot_devicetype_create
      description: ''
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceType'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: ''
  /iot/devicetype/{id}/:
    get:
      operationId: iot_devicetype_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this DeviceType.
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: ''
    put:
      operationId: iot_devicetype_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this DeviceType.
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceType'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: ''
    patch:
      operationId: iot_devicetype_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this DeviceType.
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceType'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: ''
    delete:
      operationId: iot_devicetype_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this DeviceType.
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /iot/disponibilidad-wisol/:
    post:
      operationId: iot_disponibilidad_wisol_create
      description: ''
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WisolValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WisolValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WisolValidation'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                wisol: valid
          description: ''
        '401':
          content:
            application/json:
              schema:
                detail: Las credenciales de autenticación no se proveyeron.
          description: ''
        '404':
          content:
            application/json:
              schema:
                detail: No encontrado.
          description: ''
  /iot/dispositivos/:
    get:
      operationId: iot_dispositivos_list
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDispositivoList'
          description: ''
    post:
      operationId: iot_dispositivos_create
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispositivo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dispositivo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dispositivo'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
          description: ''
  /iot/dispositivos/{wisol__serie}/:
    get:
      operationId: iot_dispositivos_retrieve
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
          description: ''
    put:
      operationId: iot_dispositivos_update
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispositivo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dispositivo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dispositivo'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
          description: ''
    patch:
      operationId: iot_dispositivos_partial_update
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDispositivo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDispositivo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDispositivo'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispositivo'
          description: ''
    delete:
      operationId: iot_dispositivos_destroy
      description: API endpoint that allows users to be view or edit devices.
      parameters:
      - in: path
        name: wisol__serie
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /iot/instalaciones/:
    get:
      operationId: iot_instalaciones_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInstalacionList'
          description: ''
    post:
      operationId: iot_instalaciones_create
      description: ''
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instalacion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instalacion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instalacion'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instalacion'
          description: ''
  /iot/instalaciones/{id}/:
    get:
      operationId: iot_instalaciones_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instalacion'
          description: ''
    put:
      operationId: iot_instalaciones_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instalacion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instalacion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Instalacion'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instalacion'
          description: ''
    patch:
      operationId: iot_instalaciones_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstalacion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstalacion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstalacion'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instalacion'
          description: ''
    delete:
      operationId: iot_instalaciones_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /iot/lecturas/:
    get:
      operationId: iot_lecturas_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLecturaList'
          description: ''
    post:
      operationId: iot_lecturas_create
      description: ''
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lectura'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lectura'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lectura'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectura'
          description: ''
  /iot/lecturas/{id}/:
    get:
      operationId: iot_lecturas_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectura'
          description: ''
    put:
      operationId: iot_lecturas_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lectura'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lectura'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lectura'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectura'
          description: ''
    patch:
      operationId: iot_lecturas_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLectura'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLectura'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLectura'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectura'
          description: ''
    delete:
      operationId: iot_lecturas_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /iot/mock_lectura/:
    post:
      operationId: iot_mock_lectura_create
      description: ''
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /iot/mock_lecturas/:
    post:
      operationId: iot_mock_lecturas_create
      description: ''
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /iot/sns-lectura-registro/:
    post:
      operationId: iot_sns_lectura_registro_create
      description: Para uso exclusivo de AWS con IOT Core
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /iot/wisol/:
    get:
      operationId: iot_wisol_list
      description: API endpoint that allows users to be view or edited Wisols.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWisolList'
          description: ''
    post:
      operationId: iot_wisol_create
      description: API endpoint that allows users to be view or edited Wisols.
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wisol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wisol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wisol'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wisol'
          description: ''
  /iot/wisol/{serie}/:
    get:
      operationId: iot_wisol_retrieve
      description: API endpoint that allows users to be view or edited Wisols.
      parameters:
      - in: path
        name: serie
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wisol'
          description: ''
    put:
      operationId: iot_wisol_update
      description: API endpoint that allows users to be view or edited Wisols.
      parameters:
      - in: path
        name: serie
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wisol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Wisol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Wisol'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wisol'
          description: ''
    patch:
      operationId: iot_wisol_partial_update
      description: API endpoint that allows users to be view or edited Wisols.
      parameters:
      - in: path
        name: serie
        schema:
          type: string
        required: true
      tags:
      - iot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWisol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWisol'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWisol'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wisol'
          description: ''
    delete:
      operationId: iot_wisol_destroy
      description: API endpoint that allows users to be view or edited Wisols.
      parameters:
      - in: path
        name: serie
        schema:
          type: string
        required: true
      tags:
      - iot
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /market/gasera/:
    get:
      operationId: market_gasera_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGaseraList'
          description: ''
    post:
      operationId: market_gasera_create
      description: ''
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gasera'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gasera'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gasera'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gasera'
          description: ''
  /market/gasera/{nombre}/:
    get:
      operationId: market_gasera_retrieve
      description: ''
      parameters:
      - in: path
        name: nombre
        schema:
          type: string
        required: true
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gasera'
          description: ''
    put:
      operationId: market_gasera_update
      description: ''
      parameters:
      - in: path
        name: nombre
        schema:
          type: string
        required: true
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gasera'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gasera'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gasera'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gasera'
          description: ''
    patch:
      operationId: market_gasera_partial_update
      description: ''
      parameters:
      - in: path
        name: nombre
        schema:
          type: string
        required: true
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGasera'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGasera'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGasera'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gasera'
          description: ''
    delete:
      operationId: market_gasera_destroy
      description: ''
      parameters:
      - in: path
        name: nombre
        schema:
          type: string
        required: true
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /market/precios/:
    get:
      operationId: market_precios_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarketLocalidadList'
          description: ''
    post:
      operationId: market_precios_create
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarketLocalidadList'
          description: ''
  /market/precios/{id}/:
    get:
      operationId: market_precios_list_2
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Precio.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarketLocalidadList'
          description: ''
    put:
      operationId: market_precios_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Precio.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarketLocalidadList'
          description: ''
    patch:
      operationId: market_precios_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Precio.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MarketLocalidad'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMarketLocalidadList'
          description: ''
    delete:
      operationId: market_precios_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Precio.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /market/sucursal/:
    get:
      operationId: market_sucursal_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSucursalList'
          description: ''
    post:
      operationId: market_sucursal_create
      description: ''
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sucursal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sucursal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sucursal'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sucursal'
          description: ''
  /market/sucursal/{numeroPermiso}/:
    get:
      operationId: market_sucursal_retrieve
      description: ''
      parameters:
      - in: path
        name: numeroPermiso
        schema:
          type: string
        required: true
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sucursal'
          description: ''
    put:
      operationId: market_sucursal_update
      description: ''
      parameters:
      - in: path
        name: numeroPermiso
        schema:
          type: string
        required: true
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sucursal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sucursal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sucursal'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sucursal'
          description: ''
    patch:
      operationId: market_sucursal_partial_update
      description: ''
      parameters:
      - in: path
        name: numeroPermiso
        schema:
          type: string
        required: true
      tags:
      - market
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSucursal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSucursal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSucursal'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sucursal'
          description: ''
    delete:
      operationId: market_sucursal_destroy
      description: ''
      parameters:
      - in: path
        name: numeroPermiso
        schema:
          type: string
        required: true
      tags:
      - market
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /rutas/pedido/:
    get:
      operationId: rutas_pedido_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - rutas
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPedidoSerialiserList'
          description: ''
    post:
      operationId: rutas_pedido_create
      description: ''
      tags:
      - rutas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
  /rutas/pedido/{id}/:
    get:
      operationId: rutas_pedido_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - rutas
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
    put:
      operationId: rutas_pedido_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - rutas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PedidoSerialiser'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
    patch:
      operationId: rutas_pedido_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - rutas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPedidoSerialiser'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoSerialiser'
          description: ''
    delete:
      operationId: rutas_pedido_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Pedido.
        required: true
      tags:
      - rutas
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{username}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
        required: true
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
        required: true
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /users/activacion-usuarios/:
    post:
      operationId: users_activacion_usuarios_create
      description: ''
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivateUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateUsers'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateUsers'
          description: ''
  /users/leads/:
    get:
      operationId: users_leads_list
      description: Se llama desde API, sirve para obtener los leads desde CRM 'posiblemente'
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadList'
          description: ''
  /users/user-dispositivo-registration/:
    post:
      operationId: users_user_dispositivo_registration_create
      description: |-
        Se llama desde API permite la creacion de Consumidores por medio de
        app y operador
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
        required: true
      security:
      - UserClassificationJWTCookieAuthentication: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporalPassUserDispsitivoCreation'
          description: ''
components:
  schemas:
    ActivateUsers:
      type: object
      description: |-
        ENDPOINT:
        /users/activacion-usuarios/
        wisol: <serie>
        email: <bla@hola.com>
        password1: pwd
        password2: pwd

        VALIDA:
        * Usuario existe
        * Wisol existe
        * Wisol fue asignado al usuario
        * Los pwd son iguales

        ACCIONES:
        * Establece pwd
        * Quita bandera `pwdtemporal`
        * Pone bandera `is_active`
        * Guarda en DB
      properties:
        wisol:
          type: string
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - wisol
    DeviceType:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 45
        name:
          type: string
          maxLength: 45
      required:
      - key
      - name
      - pk
    Dispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - localidad
      - municipio
      - sucursal
      - ultima_lectura
      - usuario
      - wisol
    ExpirationRefreshJWT:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    Gasera:
      type: object
      properties:
        nombre:
          type: string
        sucursal:
          $ref: '#/components/schemas/Sucursal'
      required:
      - nombre
      - sucursal
    Instalacion:
      type: object
      properties:
        fecha:
          type: string
          format: date-time
          readOnly: true
        operario:
          type: string
        consumidor:
          type: string
        folio:
          type: string
          maxLength: 10
      required:
      - consumidor
      - fecha
      - folio
      - operario
    Lead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        telefono:
          type: string
          readOnly: true
        dispositivo_set:
          type: array
          items:
            $ref: '#/components/schemas/NestedDispositivo'
          readOnly: true
        tipo:
          allOf:
          - $ref: '#/components/schemas/TipoEnum'
          readOnly: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - dispositivo_set
      - email
      - first_name
      - id
      - last_name
      - sucursal
      - telefono
      - tipo
      - username
    Lectura:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        fecha:
          type: string
          format: date-time
          readOnly: true
        sensor:
          type: integer
          readOnly: true
        porcentaje:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
          readOnly: true
        dispositivo:
          type: string
          format: uri
          readOnly: true
      required:
      - dispositivo
      - fecha
      - porcentaje
      - sensor
      - url
    Localidad:
      type: object
      properties:
        clave:
          type: string
          maxLength: 13
      required:
      - clave
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MarketLocalidad:
      type: object
      properties:
        clave:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Gasera'
      required:
      - clave
      - data
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 80
        numeroPermiso:
          type: string
          maxLength: 22
        ubicacion:
          type: object
          additionalProperties: {}
          nullable: true
        telefono:
          type: string
          maxLength: 128
        gasera:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - gasera
      - id
      - numeroPermiso
    NestedDispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        pk:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - localidad
      - municipio
      - pk
      - sucursal
      - ultima_lectura
      - usuario
      - wisol
    PaginatedDeviceTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceType'
    PaginatedDispositivoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dispositivo'
    PaginatedGaseraList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Gasera'
    PaginatedInstalacionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Instalacion'
    PaginatedLeadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
    PaginatedLecturaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lectura'
    PaginatedMarketLocalidadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/MarketLocalidad'
    PaginatedPedidoSerialiserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/PedidoSerialiser'
    PaginatedSucursalList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Sucursal'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWisolList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Wisol'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDeviceType:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 45
        name:
          type: string
          maxLength: 45
    PatchedDispositivo:
      type: object
      description: |-
        A subclass of ModelSerializer
        that outputs geojson-ready data as
        features and feature collections
      properties:
        nombre:
          type: string
          maxLength: 45
        wisol:
          type: string
          readOnly: true
        capacidad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sucursal:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        municipio:
          type: string
          readOnly: true
        localidad:
          type: string
          readOnly: true
        usuario:
          type: string
          readOnly: true
        calendarizado:
          type: boolean
        ultima_lectura:
          type: object
          additionalProperties: {}
          readOnly: true
        location:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedGasera:
      type: object
      properties:
        nombre:
          type: string
        sucursal:
          $ref: '#/components/schemas/Sucursal'
    PatchedInstalacion:
      type: object
      properties:
        fecha:
          type: string
          format: date-time
          readOnly: true
        operario:
          type: string
        consumidor:
          type: string
        folio:
          type: string
          maxLength: 10
    PatchedLectura:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        fecha:
          type: string
          format: date-time
          readOnly: true
        sensor:
          type: integer
          readOnly: true
        porcentaje:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
          readOnly: true
        dispositivo:
          type: string
          format: uri
          readOnly: true
    PatchedPedidoSerialiser:
      type: object
      properties:
        cantidad:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
        dispositivo:
          type: integer
        precio:
          type: integer
        gasera:
          type: string
    PatchedSucursal:
      type: object
      properties:
        numeroPermiso:
          type: string
        precio:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        telefono:
          type: string
          maxLength: 128
        dispositivo_set:
          type: array
          items:
            $ref: '#/components/schemas/NestedDispositivo'
          readOnly: true
        tipo:
          $ref: '#/components/schemas/TipoEnum'
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
    PatchedWisol:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        serie:
          type: string
          maxLength: 8
        pac:
          type: string
          maxLength: 16
        deviceTypeId:
          type: integer
        prototype:
          type: boolean
    PedidoSerialiser:
      type: object
      properties:
        cantidad:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
        dispositivo:
          type: integer
        precio:
          type: integer
        gasera:
          type: string
      required:
      - cantidad
      - dispositivo
      - gasera
      - precio
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Sucursal:
      type: object
      properties:
        numeroPermiso:
          type: string
        precio:
          type: string
          format: decimal
          maximum: 10000000000
          minimum: -10000000000
      required:
      - numeroPermiso
      - precio
    TemporalPassUserDispsitivoCreation:
      type: object
      description: |-
        ENDPOINT:
        /users/user-dispositivo-registration/

        DESCRIPCION:
        Este endpoint es para crear el usuario con password inutilizable y el dispositivo del chip wisol
        que se esta instalando. El dispositivo deberá de comenzar a funcionar pero el usuario aún necesita
        activación.

        CAMPOS:
        telefono: (string) Telefono del futuro usuario a 10 digitos
        location: (string) Ubicacion geografica del futuro dispositivo en formato POINT(x.abcd -y.xyz)
        capacidad: (int) Capacidad del tanque del futuro dispositivo
        calle: (string) Nombre de la calle del dispositivo
        numero: (string) Numero e interior si existe
        cp: (string) Código postal
        colonia: (string) Colonia de la ubicación del dispositivo

        CAMPOS OCULTOS (NO UTILIZABLES PARA EL CLIENTE)
        sucursal: (<Sucursal: Model>) Sera la sucursal del cliente que da de alta el consumidor
        tipo: (string) En este caso siempre será `CONSUMIDOR`
        pwdtemporal: (bool) En este caso siempre será True

        CAMPOS EN HERENCIA:
        username: Nombre de usuario del futuro usuario
        email: Correo del futuro usuario
        wisol: Numero de serie del wisol a validar y unir al dispositivo

        VALIDA:
        * Wisol con serie existe
        * Wisol disponible (sin dispositivo o Usuario)
        * Username sigue convenciones UTF-8
        * Username no existe previo a la creación
        * Email no existe previo a la creación

        ACCIONES:
        * Crea el usuario con pwd no utilizable
        * Crea el dispositivo con el chip Wisol proporcionado
        * Asigna el dispositivo al usuario recién creado
      properties:
        wisol:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
          maxLength: 150
          minLength: 1
        telefono:
          type: string
        location:
          type: object
          additionalProperties: {}
        capacidad:
          type: integer
        calle:
          type: string
        numero:
          type: string
        cp:
          type: string
        colonia:
          type: string
      required:
      - calle
      - colonia
      - cp
      - location
      - numero
      - username
      - wisol
    TipoEnum:
      enum:
      - CLIENTE
      - CONSUMIDOR
      - STAFF
      - OPERARIO
      type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        telefono:
          type: string
          maxLength: 128
        dispositivo_set:
          type: array
          items:
            $ref: '#/components/schemas/NestedDispositivo'
          readOnly: true
        tipo:
          $ref: '#/components/schemas/TipoEnum'
      required:
      - dispositivo_set
      - email
      - id
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Obligatorio. Longitud máxima 150 caracteres alfanuméricos.
            Letras, dígitos y @/./+/-/_ únicamente.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    Wisol:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        serie:
          type: string
          maxLength: 8
        pac:
          type: string
          maxLength: 16
        deviceTypeId:
          type: integer
        prototype:
          type: boolean
      required:
      - deviceTypeId
      - pac
      - pk
      - serie
    WisolValidation:
      type: object
      description: |-
        ENDPOINT:
        /iot/disponibilidad-wisol/
        POST
        wisol: <serie>

        VALIDA:
        * Wisol con serie existe
        * Wisol disponible (sin dispositivo o Usuario)
      properties:
        wisol:
          type: string
      required:
      - wisol
  securitySchemes:
    UserClassificationJWTCookieAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Autenticación que soporta JWT en el Authentication header, así
        como mediante cookie,
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
